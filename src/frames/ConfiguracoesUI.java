/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import constantes.Bateria;
import constantes.Fator;
import constantes.Parametro;
import configuracoes.Configurar;
import configuracoes.EstiloFrame;
import constantes.Pista;
import serial.Comunicacao;

/**
 *
 * @author Mateus
 */
public class ConfiguracoesUI extends javax.swing.JDialog {
    CoRAUI coRAUI;
    public ConfiguracoesUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setarValores();
        coRAUI = (CoRAUI) parent;
        
        EstiloFrame estilo = new EstiloFrame();
        estilo.icone(this, "/imagens/configuracao.png");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resetar = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        painelConfigurarBateria = new javax.swing.JPanel();
        configuracoesClassificatoria = new javax.swing.JPanel();
        labelCalouro3 = new javax.swing.JLabel();
        labelRelatorio3 = new javax.swing.JLabel();
        labelTempo3 = new javax.swing.JLabel();
        labelCheckPoint3 = new javax.swing.JLabel();
        labelCompletar3 = new javax.swing.JLabel();
        relatorioClassificatoria_cfg = new javax.swing.JSpinner();
        completarClassificatoria_cfg = new javax.swing.JSpinner();
        tempoClassificatoria_cfg = new javax.swing.JSpinner();
        checkPointClassificatoria_cfg = new javax.swing.JSpinner();
        calouroClassificatoria_cfg = new javax.swing.JSpinner();
        configuracoesFinal = new javax.swing.JPanel();
        labelCalouro = new javax.swing.JLabel();
        labelRelatorio = new javax.swing.JLabel();
        labelTempo = new javax.swing.JLabel();
        labelCheckPoint = new javax.swing.JLabel();
        labelCompletar = new javax.swing.JLabel();
        relatorioFinal_cfg = new javax.swing.JSpinner();
        completarFinal_cfg = new javax.swing.JSpinner();
        tempoFinal_cfg = new javax.swing.JSpinner();
        checkPointFinal_cfg = new javax.swing.JSpinner();
        calouroFinal_cfg = new javax.swing.JSpinner();
        configuracoesTrechos = new javax.swing.JPanel();
        labelCalouro4 = new javax.swing.JLabel();
        primeiraBateriaTrechos_cfg = new javax.swing.JSpinner();
        labelRelatorio4 = new javax.swing.JLabel();
        segundaBateriaTrechos_cfg = new javax.swing.JSpinner();
        labelTempo4 = new javax.swing.JLabel();
        terceiraBateriaTrechos_cfg = new javax.swing.JSpinner();
        labelCheckPoint4 = new javax.swing.JLabel();
        finalTrechos_cfg = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        tempoLimite = new javax.swing.JSpinner();
        painelConfigurarSerial = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        portaCOM = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        baudRate = new javax.swing.JComboBox();
        painelTentativas = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tentativasClassificatoria = new javax.swing.JSpinner();
        tentativasFinal = new javax.swing.JSpinner();
        painelSprint = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        distSprint = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurações");
        setModal(true);

        resetar.setText("Resetar");
        resetar.setToolTipText("Resetar Alterações");
        resetar.setPreferredSize(new java.awt.Dimension(80, 80));
        resetar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetarActionPerformed(evt);
            }
        });

        salvar.setText("Salvar");
        salvar.setToolTipText("Salvar Alterações");
        salvar.setPreferredSize(new java.awt.Dimension(80, 80));
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        painelConfigurarBateria.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Configurar Baterias"));

        configuracoesClassificatoria.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fatores Classificatória"));
        configuracoesClassificatoria.setMaximumSize(new java.awt.Dimension(310, 274));

        labelCalouro3.setText("Check Point");

        labelRelatorio3.setText("Tempo");

        labelTempo3.setText("Completar");

        labelCheckPoint3.setText("Relatório");

        labelCompletar3.setText("Calouro");

        relatorioClassificatoria_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        completarClassificatoria_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        tempoClassificatoria_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        checkPointClassificatoria_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        calouroClassificatoria_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        javax.swing.GroupLayout configuracoesClassificatoriaLayout = new javax.swing.GroupLayout(configuracoesClassificatoria);
        configuracoesClassificatoria.setLayout(configuracoesClassificatoriaLayout);
        configuracoesClassificatoriaLayout.setHorizontalGroup(
            configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracoesClassificatoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCheckPoint3)
                    .addComponent(labelRelatorio3)
                    .addComponent(labelCalouro3)
                    .addComponent(labelTempo3)
                    .addComponent(labelCompletar3))
                .addGap(18, 18, 18)
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(completarClassificatoria_cfg)
                    .addComponent(relatorioClassificatoria_cfg)
                    .addComponent(tempoClassificatoria_cfg)
                    .addComponent(checkPointClassificatoria_cfg)
                    .addComponent(calouroClassificatoria_cfg))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configuracoesClassificatoriaLayout.setVerticalGroup(
            configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracoesClassificatoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCalouro3)
                    .addComponent(checkPointClassificatoria_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRelatorio3)
                    .addComponent(tempoClassificatoria_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTempo3)
                    .addComponent(completarClassificatoria_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCheckPoint3)
                    .addComponent(relatorioClassificatoria_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesClassificatoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCompletar3)
                    .addComponent(calouroClassificatoria_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        configuracoesFinal.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fatores Final"));
        configuracoesFinal.setMaximumSize(new java.awt.Dimension(310, 274));

        labelCalouro.setText("Checkpoint");

        labelRelatorio.setText("Tempo");

        labelTempo.setText("Completar");

        labelCheckPoint.setText("Relatório");

        labelCompletar.setText("Calouro");

        relatorioFinal_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        completarFinal_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        tempoFinal_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        checkPointFinal_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        calouroFinal_cfg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        javax.swing.GroupLayout configuracoesFinalLayout = new javax.swing.GroupLayout(configuracoesFinal);
        configuracoesFinal.setLayout(configuracoesFinalLayout);
        configuracoesFinalLayout.setHorizontalGroup(
            configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracoesFinalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCheckPoint)
                    .addComponent(labelRelatorio)
                    .addComponent(labelCalouro)
                    .addComponent(labelTempo)
                    .addComponent(labelCompletar))
                .addGap(18, 18, 18)
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(completarFinal_cfg)
                    .addComponent(relatorioFinal_cfg)
                    .addComponent(tempoFinal_cfg)
                    .addComponent(checkPointFinal_cfg)
                    .addComponent(calouroFinal_cfg))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configuracoesFinalLayout.setVerticalGroup(
            configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracoesFinalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCalouro)
                    .addComponent(checkPointFinal_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRelatorio)
                    .addComponent(tempoFinal_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTempo)
                    .addComponent(completarFinal_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCheckPoint)
                    .addComponent(relatorioFinal_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCompletar)
                    .addComponent(calouroFinal_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        configuracoesTrechos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Número de Trechos"));

        labelCalouro4.setText("1ª Bateria");

        primeiraBateriaTrechos_cfg.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));

        labelRelatorio4.setText("2ª Bateria");

        segundaBateriaTrechos_cfg.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));

        labelTempo4.setText("3ª Bateria");

        terceiraBateriaTrechos_cfg.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));

        labelCheckPoint4.setText("Final");

        finalTrechos_cfg.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));

        javax.swing.GroupLayout configuracoesTrechosLayout = new javax.swing.GroupLayout(configuracoesTrechos);
        configuracoesTrechos.setLayout(configuracoesTrechosLayout);
        configuracoesTrechosLayout.setHorizontalGroup(
            configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracoesTrechosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCheckPoint4)
                    .addComponent(labelRelatorio4)
                    .addComponent(labelCalouro4)
                    .addComponent(labelTempo4))
                .addGap(18, 18, 18)
                .addGroup(configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(terceiraBateriaTrechos_cfg)
                    .addComponent(segundaBateriaTrechos_cfg)
                    .addComponent(primeiraBateriaTrechos_cfg)
                    .addComponent(finalTrechos_cfg, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configuracoesTrechosLayout.setVerticalGroup(
            configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracoesTrechosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCalouro4)
                    .addComponent(primeiraBateriaTrechos_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRelatorio4)
                    .addComponent(terceiraBateriaTrechos_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTempo4)
                    .addComponent(segundaBateriaTrechos_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(configuracoesTrechosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCheckPoint4)
                    .addComponent(finalTrechos_cfg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Tempo Limite");

        tempoLimite.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        tempoLimite.setToolTipText("Tempo máximo em minutos para completar o percurso.");

        javax.swing.GroupLayout painelConfigurarBateriaLayout = new javax.swing.GroupLayout(painelConfigurarBateria);
        painelConfigurarBateria.setLayout(painelConfigurarBateriaLayout);
        painelConfigurarBateriaLayout.setHorizontalGroup(
            painelConfigurarBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfigurarBateriaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(configuracoesClassificatoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configuracoesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConfigurarBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelConfigurarBateriaLayout.createSequentialGroup()
                        .addComponent(configuracoesTrechos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelConfigurarBateriaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tempoLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        painelConfigurarBateriaLayout.setVerticalGroup(
            painelConfigurarBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfigurarBateriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConfigurarBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(configuracoesClassificatoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(configuracoesFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelConfigurarBateriaLayout.createSequentialGroup()
                        .addComponent(configuracoesTrechos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelConfigurarBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tempoLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelConfigurarSerial.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Comunicação Serial"));

        jLabel1.setText("Porta");

        jLabel2.setText("Baud Rate");

        baudRate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "300", "600", "1200", "2400", "4800", "9600", "14400", "19200", "28800", "31250", "38400", "57600", "115200" }));

        javax.swing.GroupLayout painelConfigurarSerialLayout = new javax.swing.GroupLayout(painelConfigurarSerial);
        painelConfigurarSerial.setLayout(painelConfigurarSerialLayout);
        painelConfigurarSerialLayout.setHorizontalGroup(
            painelConfigurarSerialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfigurarSerialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConfigurarSerialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelConfigurarSerialLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(baudRate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelConfigurarSerialLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(portaCOM, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelConfigurarSerialLayout.setVerticalGroup(
            painelConfigurarSerialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfigurarSerialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConfigurarSerialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(portaCOM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelConfigurarSerialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(baudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelTentativas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Número de Tentativas"));

        jLabel3.setText("Classificatória");

        jLabel4.setText("Final");

        tentativasClassificatoria.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        tentativasFinal.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        javax.swing.GroupLayout painelTentativasLayout = new javax.swing.GroupLayout(painelTentativas);
        painelTentativas.setLayout(painelTentativasLayout);
        painelTentativasLayout.setHorizontalGroup(
            painelTentativasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTentativasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTentativasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelTentativasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tentativasClassificatoria)
                    .addComponent(tentativasFinal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelTentativasLayout.setVerticalGroup(
            painelTentativasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTentativasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTentativasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tentativasClassificatoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelTentativasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tentativasFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        painelSprint.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Sprint"));

        jLabel6.setText("Distância");

        distSprint.setModel(new javax.swing.SpinnerNumberModel(243, 1, 1000, 1));
        distSprint.setToolTipText("Distância em centímetros para o Sprint.");

        javax.swing.GroupLayout painelSprintLayout = new javax.swing.GroupLayout(painelSprint);
        painelSprint.setLayout(painelSprintLayout);
        painelSprintLayout.setHorizontalGroup(
            painelSprintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSprintLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(distSprint, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painelSprintLayout.setVerticalGroup(
            painelSprintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSprintLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSprintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(distSprint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelTentativas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelConfigurarSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelSprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(painelConfigurarBateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelConfigurarBateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelTentativas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelConfigurarSerial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelSprint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void resetarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetarActionPerformed
        setarValores();
    }//GEN-LAST:event_resetarActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        salvar();
    }//GEN-LAST:event_salvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfiguracoesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfiguracoesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfiguracoesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfiguracoesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ConfiguracoesUI dialog = new ConfiguracoesUI(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    
    private void portasCOM(){
        Comunicacao comunicacao = new Comunicacao();
        comunicacao.getPortas(portaCOM);
        String porta = Parametro.PORTA_COM.getPorta();
        if(porta != null){
            portaCOM.setSelectedItem(porta);
        }

    }
    private void salvar(){
        if(CoRAUI.isConectado()){
            coRAUI.conexao();
        }
        
        Fator.CHECKPOINT_CLASSIFICATORIA.setValue((int) checkPointClassificatoria_cfg.getValue());
        Fator.TEMPO_CLASSIFICATORIA.setValue((int) tempoClassificatoria_cfg.getValue());
        Fator.COMPLETAR_CLASSIFICATORIA.setValue((int) completarClassificatoria_cfg.getValue());
        Fator.RELATORIO_CLASSIFICATORIA.setValue((int) relatorioClassificatoria_cfg.getValue());
        Fator.CALOURO_CLASSIFICATORIA.setValue((int) calouroClassificatoria_cfg.getValue());
        
        Fator.CHECKPOINT_FINAL.setValue((int) checkPointFinal_cfg.getValue());
        Fator.TEMPO_FINAL.setValue((int) tempoFinal_cfg.getValue());
        Fator.COMPLETAR_FINAL.setValue((int) completarFinal_cfg.getValue());
        Fator.RELATORIO_FINAL.setValue((int) relatorioFinal_cfg.getValue());
        Fator.CALOURO_FINAL.setValue((int) calouroFinal_cfg.getValue());  
        
        Parametro.setTrechos(Bateria.PRIMEIRA.getValue(), (int) primeiraBateriaTrechos_cfg.getValue());
        Parametro.setTrechos(Bateria.SEGUNDA.getValue(), (int) terceiraBateriaTrechos_cfg.getValue());
        Parametro.setTrechos(Bateria.TERCEIRA.getValue(), (int) segundaBateriaTrechos_cfg.getValue());
        Parametro.setTrechos(Bateria.FINAL.getValue(), (int) finalTrechos_cfg.getValue());
        
        Parametro.DIST_SPRINT.setValue((int) distSprint.getValue());
        
        int tempo = (int) tempoLimite.getValue();
        tempo *= 60000;
        Parametro.TEMPO_LIMITE.setValue(tempo);
        
        Parametro.TENTATIVAS_CLASSIFICATORIA.setValue((int) tentativasClassificatoria.getValue());
        Parametro.TENTATIVAS_FINAL.setValue((int) tentativasFinal.getValue());
        
        Parametro.BAUDRATE.setValue((Integer.parseInt((String) baudRate.getSelectedItem())));
        Parametro.BAUDRATE_INDEX.setValue(baudRate.getSelectedIndex());
        Parametro.PORTA_COM.setPorta((String) portaCOM.getSelectedItem());
        
        Pista.reseta();
        
        CoRAUI.getMonitorSerial().getCampoBaudRate().setText(String.valueOf(Parametro.BAUDRATE.getValue()));
        CoRAUI.getMonitorSerial().getCampoPorta().setText(Parametro.PORTA_COM.getPorta());
        
        Configurar configurar = new Configurar();
        configurar.salvarParametros();
    }
    
    private void setarValores(){
        checkPointClassificatoria_cfg.setValue(Fator.CHECKPOINT_CLASSIFICATORIA.getValue());
        tempoClassificatoria_cfg.setValue(Fator.TEMPO_CLASSIFICATORIA.getValue());
        completarClassificatoria_cfg.setValue(Fator.COMPLETAR_CLASSIFICATORIA.getValue());
        relatorioClassificatoria_cfg.setValue(Fator.RELATORIO_CLASSIFICATORIA.getValue());
        calouroClassificatoria_cfg.setValue(Fator.CALOURO_CLASSIFICATORIA.getValue());   
        
        checkPointFinal_cfg.setValue(Fator.CHECKPOINT_FINAL.getValue());
        tempoFinal_cfg.setValue(Fator.TEMPO_FINAL.getValue());
        completarFinal_cfg.setValue(Fator.COMPLETAR_FINAL.getValue());
        relatorioFinal_cfg.setValue(Fator.RELATORIO_FINAL.getValue());
        calouroFinal_cfg.setValue(Fator.CALOURO_FINAL.getValue());
        
        primeiraBateriaTrechos_cfg.setValue(Parametro.getTrechos(Bateria.PRIMEIRA.getValue()));
        terceiraBateriaTrechos_cfg.setValue(Parametro.getTrechos(Bateria.SEGUNDA.getValue()));
        segundaBateriaTrechos_cfg.setValue(Parametro.getTrechos(Bateria.TERCEIRA.getValue()));
        finalTrechos_cfg.setValue(Parametro.getTrechos(Bateria.FINAL.getValue()));  
        
        distSprint.setValue(Parametro.DIST_SPRINT.getValue());
        
        int tempo = Parametro.TEMPO_LIMITE.getValue();
        tempo /= 60000;
        tempoLimite.setValue(tempo);
        
        tentativasClassificatoria.setValue(Parametro.TENTATIVAS_CLASSIFICATORIA.getValue());
        tentativasFinal.setValue(Parametro.TENTATIVAS_FINAL.getValue());
        
        baudRate.setSelectedIndex(Parametro.BAUDRATE_INDEX.getValue());   
        portasCOM();
    } 
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox baudRate;
    private javax.swing.JSpinner calouroClassificatoria_cfg;
    private javax.swing.JSpinner calouroFinal_cfg;
    private javax.swing.JSpinner checkPointClassificatoria_cfg;
    private javax.swing.JSpinner checkPointFinal_cfg;
    private javax.swing.JSpinner completarClassificatoria_cfg;
    private javax.swing.JSpinner completarFinal_cfg;
    private javax.swing.JPanel configuracoesClassificatoria;
    private javax.swing.JPanel configuracoesFinal;
    private javax.swing.JPanel configuracoesTrechos;
    private javax.swing.JSpinner distSprint;
    private javax.swing.JSpinner finalTrechos_cfg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelCalouro;
    private javax.swing.JLabel labelCalouro3;
    private javax.swing.JLabel labelCalouro4;
    private javax.swing.JLabel labelCheckPoint;
    private javax.swing.JLabel labelCheckPoint3;
    private javax.swing.JLabel labelCheckPoint4;
    private javax.swing.JLabel labelCompletar;
    private javax.swing.JLabel labelCompletar3;
    private javax.swing.JLabel labelRelatorio;
    private javax.swing.JLabel labelRelatorio3;
    private javax.swing.JLabel labelRelatorio4;
    private javax.swing.JLabel labelTempo;
    private javax.swing.JLabel labelTempo3;
    private javax.swing.JLabel labelTempo4;
    private javax.swing.JPanel painelConfigurarBateria;
    private javax.swing.JPanel painelConfigurarSerial;
    private javax.swing.JPanel painelSprint;
    private javax.swing.JPanel painelTentativas;
    private javax.swing.JComboBox portaCOM;
    private javax.swing.JSpinner primeiraBateriaTrechos_cfg;
    private javax.swing.JSpinner relatorioClassificatoria_cfg;
    private javax.swing.JSpinner relatorioFinal_cfg;
    private javax.swing.JButton resetar;
    private javax.swing.JButton salvar;
    private javax.swing.JSpinner segundaBateriaTrechos_cfg;
    private javax.swing.JSpinner tempoClassificatoria_cfg;
    private javax.swing.JSpinner tempoFinal_cfg;
    private javax.swing.JSpinner tempoLimite;
    private javax.swing.JSpinner tentativasClassificatoria;
    private javax.swing.JSpinner tentativasFinal;
    private javax.swing.JSpinner terceiraBateriaTrechos_cfg;
    // End of variables declaration//GEN-END:variables
}
